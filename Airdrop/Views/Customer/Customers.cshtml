
@{
    ViewBag.Title = "Customers";
    Layout = "~/Views/Shared/adminLayout.cshtml";
}
@if (TempData["msg"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <strong>@TempData["msg"]</strong>
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}
<table id="customerTable" class="table table-bordered table-hover">
    <thead class="table-warning">
        <tr>
            <th>Name</th>
            <th>Phone</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @if (Model == null)
        {
            <tr><td colspan="5">No Data Found</td></tr>
        }
        else
        {
            foreach (var customer in Model)
            {
    <tr>
        <td><a href="/customer/CustomerProfile?id=@customer.Id">@customer.Name</a></td>
        <td>@customer.Address</td>
    
        <td>
            <button class="btn btn-primary btn-sm" onclick="openEditForm('@customer.Id', '@customer.Name', '@customer.Address', '@customer.Phone')"><i class="fas fa-edit"></i> Edit</button>
        </td>
    </tr>
            }
        }
    </tbody>
</table>

<script>
    $(document).ready(function () {
        $('#customerTable').DataTable({
            dom: 'Bfrtip',
            buttons: [
                {
                    extend: 'csv',
                    className: 'btn btn-primary',
                    text: '<i class="fas fa-file-csv"></i> CSV'
                },
                {
                    extend: 'excel',
                    className: 'btn btn-success',
                    text: '<i class="fas fa-file-excel"></i> Excel'
                },
                {
                    extend: 'pdf',
                    className: 'btn btn-danger',
                    text: '<i class="fas fa-file-pdf"></i> PDF'
                }
            ],
            paging: true, // Enable pagination
            searching: true, // Enable search
            searchCols: [
                null, null // Set searchCols value to -1 for each column
            ],
        });
    });

    function openEditForm(customerId, customerName, Address, Phone) {

            Swal.fire({
                title: 'Edit Customer',
                html: `<input type="text" id="customerName" placeholder="Name" class="swal2-input" value="${customerName}">` +
                    `<input type="text" id="customerAddress" placeholder="Address" class="swal2-input" value="${Address}">` +
                    `<input type="text" id="customerPhone" placeholder="Phone" class="swal2-input" value="${Phone}">`,
                showCancelButton: true,
                confirmButtonText: 'Save',
                cancelButtonText: 'Cancel',
                preConfirm: () => {
                    const name = Swal.getPopup().querySelector('#customerName').value;
                    const address = Swal.getPopup().querySelector('#customerAddress').value;
                    const phone = Swal.getPopup().querySelector('#customerPhone').value;
                    //phone number will start with 01 and will be 11 digits long

                    
                    // Validate input fields
                    if (!name || !address || !phone) {
                        Swal.showValidationMessage('Please fill in all fields');
                        return false;
                    }
                    const phoneRegex = /^01\d{9}$/;
                    if (!phoneRegex.test(phone)) {
                        Swal.showValidationMessage('valid phone number start with 01 and 11 digit');
                        return false;
                    }

                    const data = {
                        Id: customerId,
                        Name: name,
                        Address: address,
                        Phone: phone
                    };
                    return fetch('/Customer/UpdateCustomer', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(data)
                    })
                        .then(response => response.json())
                        .then(result => {
                            if (result) {
                                Swal.fire('Success', 'Customer updated successfully!', 'success');
                                // Perform any additional actions on success
                                //resolve and reload page
                                location.reload();

                            } else {
                                Swal.fire('Error', 'Failed to update customer.', 'error');
                                // Perform any additional actions on error
                            }
                        })
                        .catch(error => {
                            Swal.fire('Error', 'An error occurred.', 'error');
                            console.error(error);
                        });
                }
            });
  }
</script>



